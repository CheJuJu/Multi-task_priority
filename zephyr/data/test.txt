1 1 1.4 1.0 1.6 2.0 1.6 2.0 1.3333333333333333 1.0 1.6 5 2.0 4 17 19 62	cmake does not show verbose output of build tools . In the old build system , if V= 1 was passed to Make , then this would implictly pass -- verbose flags to tools like gen_idt , gen_gdt , gen_kobject_list , etc ... This isn't happening any more , if I pass VERBOSE = 1 to the build I see no debug output from post build tools .	1	0
0 0 0.6 0.0 1.0 1.0 1.0 1.0 0.6666666666666666 0.0 1.2833333333333334 60 1.0 2 7 17 72	frdm_kw41z : Current master fails compilation in drivers/pwm/pwm_mcux_tpm . c . Build error messages : : 00:13:06 . 112 2883 | #define DT_FOREACH_OKAY_INST_nxp_kinetis_tpm(fn ) fn(0 ) fn(1 ) 00:13:06 . 112 | ^ ~ 00:13:06 . 112 /home/buildslave/workspace/zephyr-upstream/zephyr/include/sys/util_internal . h : 106:36 : note : in expansion of macro ' DT_FOREACH_OKAY_INST_nxp_kinetis_tpm ' 00:13:06 . 112 106 | #define UTIL_PRIMITIVE_CAT(a , ... ) a# #__VA_ARGS__ 00:13:06 . 112 | ^ 00:13:06 . 112 /home/buildslave/workspace/zephyr-upstream/zephyr/drivers/pwm/pwm_mcux_tpm . c : 203:1 : note : in expansion of macro ' DT_INST_FOREACH_STATUS_OKAY ' 00:13:06 . 112 203 | DT_INST_FOREACH_STATUS_OKAY(TPM_DEVICE ) 00:13:06 . 112 | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~ 00:13:06 . 112 /home/buildslave/workspace/zephyr-upstream/zephyr/include/device . h : 186:2 : error : type defaults to ' int ' in declaration of ' DEVICE_DT_DEFINE ' [-Werror = implicit-int ] . Full log : < URL > Specific commit built : d5072d13786edc4bc34a169e743d5aeeee34a819  	0	0
1 1 1.2 1.0 1.2 1.0 1.15 1.0 1.6666666666666667 2.0 1.0232558139534884 129 1.0 6 8 23 216	tests : exclude sam0 boards from tests that will not build on them . the async uart and spi loopback tests will not build on SAM0 based boards as they require dma to be configured and none of the boards do that . So we exclude these boards from being built for these tests .  	0	0
0 0 1.0 1.0 1.4 1.5 1.3 1.0 1.0 1.0 1.0641646489104115 826 1.0 7 22 39 157	implement _tsc_read equivalent for all architectures . Reported by Anas Nashif : For the boo t_t ime measurement benchmark , we need this function to be implemented on all arches , right now it is implemented for x86 only ( Imported from Jira ZEP-1414 )	2	1
2 2 1.6 2.0 1.5 1.5 1.45 1.5 2.0 2.0 1.0835734870317002 1041 1.0 4 15 44 107	frdm_k64f : Ethernet networking starts to respond ~ 10s after boot . Reported by Paul Sokolovsky : As reported ' by the way ' in few other tickets , frdm_k64f Ethernet networking doesn't respond immediately after boot , it takes some time for it to start responding to pings , etc . I just timed it after one particular reboot to be ~ 10s . I don't remember such long delay before < URL > . ( But can't pledge there wasn't a shorter , 1-2s delay before it . ) ( Imported from Jira ZEP-1734 )	2	0
0 0 1.2 1.0 1.1 1.0 1.2 1.0 1.0 1.0 1.0526315789473684 19 1.0 1 4 7 75	logging : init strdup mem_slab with aligned buffer size . We are using a non-32-bit aligned value as the block size when initializing the strdup mem_slab for Logger . When the non-aligned pointer is being freed , it's converted to a u32_t and this generates the following : * USAGE FAULT *** Unaligned memory access Let's use the aligned buffer size as the block size instead . Signed-off-by : Michael Scott < URL >  	0	0
2 2 1.6 2.0 1.6 2.0 1.4 1.5 1.3333333333333333 1.0 1.5 2 1.5 1 5 13 131	CPU Lockups when using own Log Backend . Describe the bug [ Updated ] We have an application based on a nrf52840 . We see occational : CPU Lockups . . Environment : - OS : Ubuntu 20.04 , - Toolchain : zephyr-sdk- 0.12.2 - Zephyr Project ( Tag : 2.5.0 . )	2	0
0 0 1.0 1.0 0.9 1.0 0.85 1.0 0.6666666666666666 1.0 1.3125 16 1.0 3 17 28 78	coverage : Bugfix : Missing coverage in nrf52_bsim . In #9717 , 777407b9ea30869008b3a04b695892755bd43355 coverage support was broken for all NATIVE_APPLICATION except native_posix This includes the nrf52_bsim board Fix it . Fixes : #13009 Signed-off-by : Alberto Escolar Piedras < URL >  	0	0
2 2 1.8 2.0 1.6 2.0 1.3 1.5 2.0 2.0 1.1022727272727273 88 1.0 2 3 8 37	Online documentation for kconfig repeats itself . Reported by Daniel Kalowsky : The generated online documentation for KConfig variables is currently huge . Part of the reason is that it repeats itself several times over for a lot of variables . For example , search for CONFIG_ROM_SIZE , and you'll find 7 entries for it . CONFIG_I2C_DW as well . ( Imported from Jira ZEP-148 )	2	2
0 0 0.8 1.0 0.9 1.0 1.1 1.0 0.6666666666666666 1.0 1.4333333333333333 150 1.0 33 41 53 108	[ Coverity CID : 203495]Control flow issues in /subsys/bluetooth/host/gatt . c . Static code scan issues seen in File : /subsys/bluetooth/host/gatt . c Category : Control flow issues Function : gatt_find_info_rsp Component : Bluetooth CID : 203495 Please fix or provide comments to square it off in coverity in the link : < URL >	1	0
1 1 0.8 1.0 1.0 1.0 1.25 1.0 0.6666666666666666 1.0 0.0 0 0.0 1 11 16 88	drivers : eth : gmac : Fix incorrect cache coherency handling code . 8282 added cache support for Atmel SAM GMAC Ethernet driver . Unfortunately the implemented cache coherency management method ensuring coherency of descriptor lists is incorrect . Atmel SAM Ethernet module is using a scatter-gather technique to exchange data with the Ethernet driver . To communicate the location of the data buffers the driver sets-up a so called descriptor list . This is effectively a place in RAM containing a sequence of 32-bit words representing buffer location and its status . If cache is enabled every time the device driver updates data in the descriptor list it should theoretically also call cache clean operation . This would ensure that the data is written to RAM where it can be read by the hardware module . Unfortunately , at the same time the device driver is modifying one location in the descriptor list the hardware module can be modifying one next to it . Since cache clean operation works on a full cache line - 32 bytes in case of Atmel device - it would overwrite any such modifications done by the hardware module . As such , ensuring cache coherency using standard techniques ( cache clean / cache invalidate ) is not possible here . In case of GMAC driver the cache coherency for the descriptor lists should be implemented using the so called non-cacheable RAM region . This is described in detail in ' Cache Coherence Management Limits ' chapter of < URL > Application Note .	1	0
0 0 0.6 0.0 0.7 1.0 1.0 1.0 0.6666666666666666 0.0 0.9594594594594594 296 1.0 0 6 9 47	Add Deep Sleep support in PMA . Reported by Ramesh Thomas : Sample PM application should successfully suspend and resume devices it uses and demonstrate entering and exiting Deep Sleep state . ( Imported from Jira ZEP-511 )  	0	1
2 2 1.6 2.0 1.2 1.0 1.25 1.0 1.6666666666666667 2.0 1.0048543689320388 412 1.0 2 5 8 62	Nano FIFO reserving first four bytes of user data isn't well-documented . Reported by Geoff Gustafson : In the API Documentation for [ Nanokernel FIFOs| < URL > the put functions like nano_fifo_put make no mention of the fact that the first 4 bytes of the data you supply will be used by the API itself , to store a linked list pointer . The get functions do mention this is in and off-handed way , and the [ Overview Documentation| < URL > does explain it reasonably well . But as I just highlighted in GH-2261 , people often don't even find that page . But it's the put functions where you really need to know this - because the data you're supplying is about to get trashed . :) I ran into this when I first tried to use them , and a coworker just had the same problem . ( Imported from Jira ZEP-747 )  	0	2
2 2 1.8 2.0 1.5 2.0 1.45 2.0 2.0 2.0 1.2524752475247525 202 1.0 2 5 17 129	PCIe : add API to get BAR region size . Is your enhancement proposal related to a problem ? Please describe . We have pcie_get_mbar () to get a BAR MMIO base address , but no API to also obtain the region size . This means that memory-mapping drivers needs to use hard-coded region sizes instead of just querying it . Describe the solution you'd like An API to obtain a BAR region size given a BDF and a BAR index . Describe alternatives you've considered Change pcie_get_mbar () to return both address and size instead of just address . Additional context This is more of an annoyance since driver code already ' knows ' the bounds since it's written against a datasheet and you can just #define it .	2	1
2 2 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 1.162828947368421 1824 1.0 66 72 77 168	[ Coverity CID : 210051 ] Dereference after null check in subsys/net/ip/tcp2 . c . Static code scan issues found in file : < URL > Category : Null pointer dereferences Function : : tcp_in . Component : Networking CID : < URL > Please fix or provide comments in coverity using the link : < URL > Note : This issue was created automatically . Priority was set based on classification of the file affected and the impact field in coverity . Assignees were set using the CODEOWNERS file .	2	0
1 1 1.4 1.0 1.3 1.0 1.1 1.0 1.3333333333333333 1.0 1.079646017699115 1130 1.0 5 12 27 136	samples/net : the coaps_server sample app runs failed on Arduino 101 . Reported by jiequan wu : In order to test coaps_server on arduino 101 , I created a prj_arduino_101 . conf file : { code } CONFIG_NETWORKING = y CONFIG_NET_IPV6 = y CONFIG_NET_IPV4 = y CONFIG_NET_UDP = y CONFIG_NE T_T CP = y CONFIG_TEST_RANDOM_GENERATOR = y CONFIG_NET_LOG = y CONFIG_NET_SLIP_TAP = y CONFIG_SYS_LOG_SHOW_COLOR = y CONFIG_INIT_STACKS = y CONFIG_PRINTK = y CONFIG_NET_STATISTICS = y CONFIG_NET_NBUF_RX_COUNT = 14 CONFIG_NET_NBUF_TX_COUNT = 14 CONFIG_NET_NBUF_DATA_COUNT = 30 CONFIG_NET_IF_UNICAST_IPV6_ADDR_COUNT =3 CONFIG_NET_IF_MCAST_IPV6_ADDR_COUNT = 2 CONFIG_NET_MAX_CONTEXTS = 10 CONFIG_ZOAP = y CONFIG_MBEDTLS = y CONFIG_MBEDTLS_BUILTIN = y CONFIG_MBEDTLS_CFG_FILE='config-coap . h ' CONFIG_NET_SAMPLES_IP_ADDRESSES = y CONFIG_NET_SAMPLES_MY_IPV6_ADDR='2001:db8::1 ' CONFIG_NET_SAMPLES_PEER_IPV6_ADDR='2001:db8::2 ' CONFIG_NET_SAMPLES_MY_IPV4_ADDR='192 . 0.2.1 ' CONFIG_NET_SAMPLES_PEER_IPV4_ADDR='192 . 0.2.2 ' ENC28J60 Ethernet Device CONFIG_ETH_ENC28J60 = y CONFIG_ETH_ENC28J6 0_0 = y CONFIG_ETH_ENC28J60_0_SPI_PORT_NAME='SPI_1 ' CONFIG_ETH_ENC28J6 0_0 _MAC3 = 0x2D CONFIG_ETH_ENC28J6 0_0 _MAC4 = 0x30 CONFIG_ETH_ENC28J6 0_0 _MAC5 = 0x36 Arduino 101 CONFIG_SPI = y { code } After flash to Arduino 101 , serial port output : { code } 锟?3锟斤拷锟?: : 锟斤拷锟斤拷k锟斤拷锟斤拷锟斤拷33锟斤拷 : 锟斤拷锟絩锟?锟斤拷33锟斤拷 . : 锟斤拷锟斤拷锟斤拷锟絑W锟斤拷锟?3锟斤拷 : : 锟斤拷锟斤拷锟斤拷锟絕锟斤拷h锟斤拷33锟斤拷锟?. : 锟斤拷锟斤拷j)锟斤拷锟斤拷锟斤拷33锟斤拷 : 锟斤拷锟絳锟斤拷锟?3锟斤拷 : : 锟斤拷锟斤拷锟斤拷锟斤拷锟絊锟斤拷锟?3锟斤拷 . : 锟斤拷锟斤拷锟斤拷锟斤拷锟絊锟斤拷锟?3锟斤拷锟斤拷锟?: : 锟斤拷锟斤拷锟絡锟斤拷锟斤拷锟斤拷锟?3锟斤拷锟?: 锟斤拷锟絳锟斤拷锟?3锟斤拷锟?. : 锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷S锟斤拷锟斤拷33锟斤拷锟絗 : 锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷S锟斤拷 { code } ( Imported from Jira ZEP-1877 )	1	0
2 2 1.6 2.0 1.5 2.0 1.4 2.0 1.6666666666666667 2.0 1.2289156626506024 83 1.0 3 8 17 205	search for board specific shield overlays doesn't always work . If the shield name doesn't match the dir name we don't look in correct place . For example shield : x_nucleo_iks01a3_shub . .	2	0
0 0 1.2 1.0 0.9 1.0 1.0 1.0 1.0 1.0 1.0940099833610648 1202 1.0 1 3 10 88	Port Zephyr to Silabs EFM32WG-STK3800 . Reported by Christian Taedcke : Add a port for Silicon Labs EFM32 Wonder Gecko SoC and the starter kit EFM32WG-STK3800 This includes the following * gpio * uart Some initial work is done here : < URL > This is work in progress ( Imported from Jira ZEP-1991 )	2	1
1 1 1.4 1.0 1.7 2.0 1.7 2.0 1.3333333333333333 1.0 0.0 0 0.0 4 4 21 168	bt_init returning success when Bluetooth initialization does not get finalized . . Describe the bug : bt_enable . is returning success when not initialized . Caused by < URL > and < URL > if : CONFIG_BT_SETTINGS = y . is and : bt_dev . id_count . is 0 . To Reproduce Steps to reproduce the behavior : 1 . set : CONFIG_BT_SETTINGS = y . 2 . call : bt_enable . whoult calling : settings_load . Expected behavior Either returning a non-zero error code if this is an error condition , or finalizing the Bluetooth initializing if it is not . Impact It causes functions like : bt_le_ext_adv_start . to return : EAGAIN . because the : BT_DEV_READY . < URL > even though it seems that Bluetooth got enabled successfully . Environment ( please complete the following information ): - OS : Windows - Toolchain : NRF Sdk - v 1.5.0	2	0
2 2 1.6 2.0 1.5 2.0 1.35 1.5 1.6666666666666667 2.0 1.0182072829131652 714 1.0 7 22 47 114	mbox : ' kernel primer v2 ' misalign to latest kpool API defined in ' kernel . h ' . Reported by Sharron LIU : In mbox ' kernel primer v2 ' , usages demonstrate ' Sending Data Using a Message Block ' via kpool API . 1 . The sample codes given in document is not aligned with the latest kpool API defined in ' kernel . h ' . 2 . The sample code does not align with ' k_mem_block ' definition , either . Please review and align them . Thanks . ( screen snapshot attached ) < URL > kernel . h : extern int k_mem_pool_alloc(struct k_mem_pool * pool , struct k_mem_block * block , size_t size , int32_t timeout ); struct k_mem_block { struct k_mem_pool * pool_id ; void * addr_in_pool ; void * data ; size_t req_size ; }; . ( Imported from Jira ZEP-1262 )	2	2
1 1 1.2 1.0 1.1 1.0 1.15 1.0 1.0 1.0 1.0826833073322932 1282 1.0 6 11 20 72	BT controller occasionally generates imprecise data abort . Reported by Michael Scott : Using Nitrogen and BT gateway hardware running 4.11.0 kernel , I am running a BT 6lowpan Zephyr application which sends MQTT traffic every 5 seconds . Eventually see : * BUS FAULT *** Executing thread ID ( thread ): 0x2000eff8 Faulting instruction address : 0x147e0 Imprecise data bus error Fatal fault in ISR ! Spinning ... When I check addr2line I see that this is : zephyr/subsys/bluetooth/controller/util/memq . c : 30 ' * tail = link;' If I hack together MPU support for nRF52 with the attached patch , then I actually see an invalid memory read a bit earlier in ' memq_enqueue ' : * MPU FAULT *** Executing thread ID ( thread ): 0x2000f058 Faulting instruction address : 0x147da Data Access Violation Address : 0xe12fc55b Fatal fault in ISR ! Spinning ... Using addr2line shows : zephyr/subsys/bluetooth/controller/util/memq . c : 24 : ' (( void ) tail ) = link;' When I trace where memq_enqueue is being called from I show : zephyr/subsys/bluetooth/controller/ll_sw/ctrl . c : ' packet_rx_enqueue ' and the parameters being passed in 2 successive calls : packet_rx_enqueue : mem : 0x20003b30 , link : 0x23b19c83 , & link_rx_tail : 0x200036d8 , link_rx_tail : 0x20003b60 packet_rx_enqueue : mem : 0x20003920 , link : 0x20003b80 , & link_rx_tail : 0x200036d8 , link_rx_tail : 0x23b19c83 In the first call we have an invalid link address being added onto the link_rx_tail ( doesn't cause an abort ) . And then the next call we add a valid link address onto the end of the invalid link_rx_tail ( causes the abort ) . ( Imported from Jira ZEP-2122 )	1	0
2 2 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 1.2686567164179106 2144 1.0 12 12 21 222	[ Coverity CID : 220443 ] Out-of-bounds access in tests/subsys/modbus/src/test_modbus_raw . c . Static code scan issues found in file : < URL > Category : Memory - corruptions Function : : client_raw_cb . Component : Tests CID : < URL > Details : < URL > Please fix or provide comments in coverity using the link : < URL > Note : This issue was created automatically . Priority was set based on classification of the file affected and the impact field in coverity . Assignees were set using the CODEOWNERS file .	2	0
0 0 0.8 1.0 1.0 1.0 1.1 1.0 0.6666666666666666 1.0 1.0698365527488856 1346 1.0 2 4 27 84	Zoap message to use more than one fragment . Reported by Patrik Flykt : Zoap API function calls only use the first fragement of a net_pkt . If the network buffer contains data in subsequent fragments , these are not accessed either on read nor write . One possible solution is to create a function such as zoap_packet_append () that takes as argument an input buffer , and , as its name implies , appends the data into one or more net_buf fragments invisible to the user . On read , a function should be created that takes an net_pkt as input and reads the requested amount of data even if the data is split over multiple net_pkt fragments . ( Imported from Jira ZEP-2210 )	1	1
2 2 2.0 2.0 2.0 2.0 1.9 2.0 2.0 2.0 1.19375 1920 1.0 5 7 28 132	[ Coverity CID : 214281 ] Unchecked return value in subsys/mgmt/osdp/src/osdp . c . Static code scan issues found in file : < URL > Category : Error handling issues Function : : osdp_init . Component : Other CID : < URL > Details : : 188 uart_irq_rx_disable(p -> dev ); 189 uart_irq_tx_disable(p -> dev ); 190 uart_irq_callback_user_data_set(p -> dev , osdp_uart_isr , p ); 191 192 /* Drain UART fifo */ 193 while ( uart_irq_rx_ready(p -> dev )) { >>> CID 214281 : Error handling issues ( CHECKED_RETURN ) >>> Calling ' uart_fifo_read ' without checking return value ( as is done elsewhere 14 out of 17 times ) . 194 uart_fifo_read(p -> dev , & c , 1 ); 195 } 196 197 /* Both TX and RX are interrupt driven */ 198 uart_irq_rx_enable(p -> dev ); 199 . Please fix or provide comments in coverity using the link : < URL > Note : This issue was created automatically . Priority was set based on classification of the file affected and the impact field in coverity . Assignees were set using the CODEOWNERS file .	2	0
2 2 1.2 1.0 1.4 1.0 1.55 2.0 1.3333333333333333 1.0 1.0765822784810126 1580 1.0 6 43 46 104	ESP32 : Some GPIO tests are getting failed ( tests/drivers/gpio/gpio_basic_api ) . Reported by Nishikant Nayak : Observed failure in some of the GPIO test cases , Like GPIO callback edge/level high , add/remove callback , enable/disable callback . How to reproduce : Added the corresponding macro and GPIOs for ESP32 in $ZEPHYRBASE/tests/drivers/gpio/gpio_basic_api/src/test_gpi o.h. { code : title = $ZEPHYRBASE/tests/drivers/gpio/gpio_basic_api/src/test_gpio . h|borderStyle = solid } elif defined(CONFIG_BOARD_ESP32 ) define DEV_NAME CONFIG_GPIO_ESP32_0_NAME define PIN_OUT 4 / DIO4 / define PIN_IN 2 / DIO2 / endif { code } Then cd $ZEPHYRBASE/tests/drivers/gpio/gpio_basic_api make pristine make BOARD = esp32 flash Need to connect one jumper between I/O 2 and I/O 4 Open COM terminal to check output . Expected result : All the GPIO Test cases should pass . ( Imported from Jira ZEP-2557 )	1	0
0 0 1.2 1.0 1.1 1.0 1.15 1.0 1.0 1.0 1.12 25 1.0 20 37 51 127	build breakage due to enabling USER_SPACE by default . The following change breaks building several configs : : . /scripts/sanitycheck -p minnowboard -s tests/benchmarks/footprint/benchmark . footprint . regular . efe0c4b : commit efe0c4b7647c5e5aa53af47679bb8625fb387b19 ( refs/bisect/bad ) Author : Andrew Boie < andrew.p.boie@intel.com > Date : Mon May 21 12:44:38 2018 -0700 tests : enable user mode by default .  	0	0
0 0 1.2 1.0 1.3 1.0 1.2 1.0 1.3333333333333333 2.0 0.0 0 0.0 3 6 37 237	mempool alignment might cause a memory block allocated twice . the alignment in mempool is #define _ALIGN4(n ) (((( n)+3)/4 ) 4 ) , it means the alignment might expand the size of the block . If max_sz is not the power of four such as 36 , the size of second level is (((( 36/4)+3)/4 ) 4 ) = 12 . Function block_break breaks the big block into 4 small blocks and append the last 3 blocks into the free_list . The last block might overflow the big block because function block_fits can not avoid this overflow . The last small block and the next big block would contain a same memory . max_sz = 36 , n_max = 3 alloc a small block ( size 12 ) alloc a big block ( size 36 ) alloc 3 small block(size 12 )	2	0
1 1 1.4 2.0 1.5 2.0 1.45 2.0 1.6666666666666667 2.0 1.0016181229773462 618 1.0 5 8 16 70	Commit e4b89571 broke sanity check . Reported by Genaro Saucedo Tejada : Before commit { code } e4b89571aac04cd2c3ec1619345d792ae260f233 { code } test { code } samples/power/power_hooks { code } Was properly building , after such commit the following error shows with the following error : { code } CC drivers/spi/spi_intel . o /home/gsaucedo/gi t-t est/LFzephyr/drivers/spi/spi_intel . c : In function ' spi_intel_resume_from_suspend ' : /home/gsaucedo/gi t-t est/LFzephyr/drivers/spi/spi_intel . c : 431:20 : error : ' spi ' undeclared ( first use in this function ) set_bit_sscr0_sse(spi -> regs ); ^ /home/gsaucedo/gi t-t est/LFzephyr/drivers/spi/spi_intel . c : 431:20 : note : each undeclared identifier is reported only once for each function it appears in /home/gsaucedo/gi t-t est/LFzephyr/scripts/Makefile . build : 182 : recipe for target ' drivers/spi/spi_intel . o ' failed make[4 ]: *** [ drivers/spi/spi_intel . o ] Error 1 { code } To reproduce run the following comand : { code } make BOARD = galileo -C samples/power/power_hooks { code } ( Imported from Jira ZEP-1095 )	1	0
0 0 0.6 1.0 1.2 1.0 1.25 1.0 0.6666666666666666 1.0 0.6923076923076923 13 0.0 20 29 47 283	Doc build does not include the zephyr modules Kconfig files . When building the doc , the : Kconfig . * . files in the modules ( : Kconfig . tinycbor . at this point ) are not being included due to the documentation build system currently creating an empty : Kconfig . modules . file : : file(TOUCH ${CMAKE_CURRENT_BINARY_DIR}/Kconfig . modules ) . So we need to actually process the modules to populate the : Kconfig . modules . file .  	0	0
2 2 1.2 1.0 1.0 1.0 0.95 1.0 1.3333333333333333 1.0 1.1612903225806452 31 1.0 31 31 31 31	Enable User/App context during pairing . Reported by Javier B Perez : Enable User/App context during pairing ( Imported from Jira ZEP-39 )	1	1
1 1 1.0 1.0 1.1 1.0 1.35 1.0 1.0 1.0 1.3270336894001644 2434 1.0 35 40 43 88	[ Coverity CID : 240659 ] Out-of-bounds read in /zephyr/include/generated/syscalls/kernel . h ( Generated Code ) . Static code scan issues found in file : < URL > Category : Memory - illegal accesses Function : : k_event_wait . Component : Kernel CID : < URL > Details : Please fix or provide comments in coverity using the link : < URL > For more information about the violation , check the < URL > . ( < URL > ) Note : This issue was created automatically . Priority was set based on classification of the file affected and the impact field in coverity . Assignees were set using the CODEOWNERS file .	1	0
0 0 1.0 1.0 1.2 1.0 0.85 1.0 0.6666666666666666 0.0 1.0846153846153845 1040 1.0 3 14 43 106	Work on ZEP-686 led to regressions in docs on integration with 3rd-party code . Reported by Paul Sokolovsky : < URL > removed very important section on how to integrate non-trivial 3rd-party project with their own complex build systems into Zephyr applications . This section can be see ( in 1.6 docs ) as < URL > . That is very important information for leveraging Zephyr for non-toy projects , and information described there already used by at least JerryScript and MicroPython ports to Zephyr . It would be very important to restore it and uphold it , to avoid all the hacky and painful ways this integration was achieved before the solution described in the docs came up . ( Imported from Jira ZEP-1733 )  	0	0
1 1 1.4 1.0 1.2 1.0 1.2 1.0 1.3333333333333333 1.0 1.3414634146341464 164 1.0 27 39 61 165	[ Coverity CID : 190972]Control flow issues in /subsys/power/power . c . Static code scan issues seen in File : /subsys/power/power . c Category : Control flow issues Function : sys_suspend Component : Other CID : 190972 Please fix or provide comments to square it off in coverity in the link : < URL >	1	0
2 2 1.4 1.0 1.5 1.5 1.0 1.0 1.3333333333333333 1.0 1.1388888888888888 36 1.0 36 36 36 36	create QEMU target which builds with IAMCU . Reported by Hirally Santiago : We could catch a lot of IAMCU calling convention issues if we had an emulated target that built with this compiler . Add a new board type qemu_x86_iamcu which identical to the standard x86 QEMU configuration , but builds with IAMCU abi . Add this to sanitycheck such that we run test cases on this target when ' sanitycheck -- all ' is invoked . ( Imported from Jira ZEP-50 )	1	1
1 1 1.2 1.0 1.3 1.0 1.45 2.0 1.3333333333333333 1.0 1.0157819225251077 697 1.0 6 20 43 99	Optimize interrupt return code on ARC . . Reported by Benjamin Walsh : There are too many pushes and pops on the stack when deciding which thread to run when exiting an interrupt . Also , see if _is_nex t_t hread_current and _get_next_ready_thread could not be folded together . Or maybe write _is_nex t_t hread_current in assembly . ( Imported from Jira ZEP-1230 )	2	1
2 2 1.6 2.0 1.4 2.0 1.55 2.0 2.0 2.0 1.0 2 1.0 4 6 17 81	Create socket options for certificates and ciphers . Create additional socket options so that the application can set CA certs , its own certs and ciphers . This gives the application better control on secure connectivity and makes it possible to configure identical devices after Zephyr OS installation .	1	1
1 1 1.2 1.0 1.5 1.5 1.5 1.5 1.0 1.0 1.1428571428571428 56 1.0 9 12 24 200	ARM Cortex-M : Z_ARCH_EXCEPT not working for Baseline SOCs . Describe the bug Z_ARCH_EXCEPT () is called , to signal errors directly from Software . In ARM Cortex-M , this is implemented with a synchronous SVC instruction , with code 2 . In Mainline SOCs this works well , because the kernel reserves the highest interrupt priority for the SVC Handler . In Baseline cores , however , we do not reserve an interrupt priority for the SVC . So if Z_ARCH_EXCEPT () is invoked from an interrupt with the highest priority , the SVC Call won't be able to execute and will trigger a synchronous ( Escalated ) hard fault . To Reproduce We have a bug report already for this : #18590 Impact We are not able to infer stack-fail checks in Baseline ARM CPUs with the STACK Sentinel feature . We do get a system exception , however , so the user is still getting some information that something went wrong .	2	1
2 2 0.8 1.0 1.1 1.0 1.2 1.0 1.3333333333333333 1.0 0.6666666666666666 3 0.0 4 17 28 87	Get configuration of a running kernel in console . In order to simplify debugging of certain cases it would be useful to be able to dump the configuration of a running Zephyr kernel from the console , just like /boot/config * in Linux It would help to create an identical environment to reproduce issues remotely from the machine where the image is built . Describe the solution you'd like A console command providing a list of config variables current kernel was built with	2	1
2 2 2.0 2.0 1.6 2.0 1.3 1.5 2.0 2.0 0.8461538461538461 13 1.0 3 10 20 77	sys_get_be64 () is missing from sys/byteorder . h . Describe the bug There exists : sys_get_le64 () . but nothing for big-endian version .	2	0
2 2 2.0 2.0 1.8 2.0 1.45 1.0 2.0 2.0 1.3909090909090909 110 1.0 2 9 20 78	[ Coverity CID : 189739]Parse warnings in /subsys/usb/class/netusb/function_eem . c . Static code scan issues seen in File : /subsys/usb/class/netusb/function_eem . c Category : Parse warnings Function : Component : Other CID : 189739 Please fix or provide comments to square it off in coverity in the link : < URL >	1	0
2 2 1.6 2.0 1.5 1.5 1.55 2.0 1.6666666666666667 2.0 0.0 0 0.0 5 18 30 104	NRF52 pca10040 boards open the ' Flash hardware support ' option , the BT Mesh example does not work properly . Describe the bug NRF52 pca10040 boards open the ' Flash hardware support ' option , the BT Mesh example does not work properly . The UART console does not see any output , return to normal after turning off this option and erase all flash .	2	0
2 2 1.2 2.0 0.9 0.5 0.6 0.0 0.6666666666666666 0.0 1.0894039735099337 906 1.0 1 13 26 68	HTTP Server sample with basic authentication . Reported by Anas Nashif : Provide a sample of an HTTP server that does basic authentication . ( Imported from Jira ZEP-1543 )	2	1
2 2 1.4 1.0 0.9 1.0 0.8 1.0 1.6666666666666667 2.0 1.1754385964912282 57 1.0 1 4 6 57	Add support for confirming incoming JustWorks pairing . Reported by Szymon Janc : provide API for confirming incoming pairing that would other result in JustWorks model ( Imported from Jira ZEP-80 )	1	1
1 1 0.8 1.0 1.2 1.0 1.1 1.0 0.6666666666666666 1.0 1.0290620871862615 757 1.0 5 11 24 128	Glossary of Terms needs updating . Reported by Allan Stephens : Should really have a single top-level Glossary of Terms document that users can easily locate and use . Move the ' Fundamental Terms and Concepts ' section of the Introducing Zephyr document to this glossary . Move the ' Glossary of Terms ' section of the Kernel Primer document to this glossary . Add in whatever significant terms are currently missing . ( Imported from Jira ZEP-1321 )	1	2
1 1 1.0 1.0 0.9 1.0 0.95 1.0 1.0 1.0 1.013953488372093 430 1.0 4 8 11 54	IPv4 . Reported by Gajinder Vij : The Zephyr IP stack shall support IPv4 as specified in RFC 791 ( Imported from Jira ZEP-789 )	2	1
1 1 1.6 2.0 1.6 2.0 1.45 2.0 1.6666666666666667 2.0 1.0940386230058774 1191 1.0 3 4 23 105	 make mrproper ' removes top-level dts/ dir , makes ARM builds fail afterwards . Reported by Paul Sokolovsky : Term shot : : $ make mrproper make[1 ]: Nothing to be done for `arch ' . make[1 ]: Nothing to be done for `boards ' . make[1 ]: Nothing to be done for `drivers ' . make[1 ]: Nothing to be done for `ext ' . make[1 ]: Nothing to be done for `kernel ' . make[1 ]: Nothing to be done for `lib ' . make[1 ]: Nothing to be done for `misc ' . make[1 ]: Nothing to be done for `subsys ' . make[1 ]: Nothing to be done for `tests ' . CLEAN dts/ $ git st HEAD detached at bdc3107d5 Changes not staged for commit : ( use ' git add/rm < file >...' to update what will be committed ) ( use ' git checkout -- < file >...' to discard changes in working directory ) deleted : dts/arm/Makefile deleted : dts/arm/armv6-m . dtsi deleted : dts/arm/armv7-m . dtsi [ ... ] $ cd samples/hello_world $ make BOARD = frdm_k64f [ ... ] /home/pfalcon/projects-3rdparty/Embedded/Zephyr/zephyr . js/deps/zephyr/scripts/Makefile . build : 46 : /mnt/hdd/projects-3rdparty/Embedded/Zephyr/zephyr . js/deps/zephyr/dts/arm/Makefile : No such file or directory make[4 ]: *** No rule to make target `/mnt/hdd/projects-3rdparty/Embedded/Zephyr/zephyr . js/deps/zephyr/dts/arm/Makefile ' . Stop . . This issue affects both v 1.7 -branch and ( apparently ) master , please backport fix to v 1.7 -branch . ( Imported from Jira ZEP-1968 )  	0	0
0 0 0.6 1.0 0.8 1.0 0.75 1.0 0.6666666666666666 1.0 1.0681818181818181 836 1.0 1 7 18 128	NXP MCR20A Driver . Reported by Johann Fischer : Create a driver for NXP MCR20A 802.15.4 , 2.4 GHz transceiver . The same driver can also be used for the internal KW2xD transceiver ( e.g. MKW22D512 Kinetis Wireless Radio MCU ) . ( Imported from Jira ZEP-1429 )	2	1
1 1 0.8 1.0 0.9 1.0 1.0 1.0 1.0 1.0 1.5333333333333334 90 2.0 10 12 15 133	[ Coverity CID : 198006]Control flow issues in /subsys/bluetooth/host/settings . c . Static code scan issues seen in File : /subsys/bluetooth/host/settings . c Category : Control flow issues Function : set Component : Bluetooth CID : 198006 Please fix or provide comments to square it off in coverity in the link : < URL >	1	0
2 2 1.6 2.0 1.5 2.0 1.3 2.0 1.3333333333333333 2.0 1.078967350037965 1317 1.0 1 8 18 76	Move all board pinmux code from drivers/pinmux/stm32 to the corrosponding board/soc locations . Reported by Anas Nashif : Move all of those soc/board specific files to the corresponding board and SoC directories . : core : zephyr(master ): ls -1 drivers/pinmux/stm32/ pinmux_board_carbon . c pinmux_board_disco_l475_iot1 . c pinmux_board_nucleo_f103rb . c pinmux_board_nucleo_f334r8 . c pinmux_board_nucleo_f401re . c pinmux_board_nucleo_f411re . c pinmux_board_nucleo_f413zh . c pinmux_board_nucleo_l432kc . c pinmux_board_nucleo_l476rg . c pinmux_board_olimexino_stm32 . c pinmux_board_stm3210c_eval . c pinmux_board_stm32373c_eval . c pinmux_board_stm32f469i_disco . c pinmux_board_stm32f4_disco . c pinmux_board_stm32l496g_disco . c pinmux_board_stm32_mini_a15 . c pinmux_stm32 . c pinmux_stm32f1 . h pinmux_stm32f3 . h pinmux_stm32f4 . h pinmux_stm32 . h pinmux_stm32l 4x.h . ( Imported from Jira ZEP-2171 )	1	1
2 2 1.4 2.0 1.1 1.0 0.95 1.0 1.3333333333333333 2.0 0.984822934232715 593 1.0 1 7 15 168	pwm_dw driver does not compile . Reported by Marcus Shawcroft : pwm_dw driver uses the symbol PWM_DW_BASE_ADDR but there is no definition of that symbol in the zephyr source tree . ( Imported from Jira ZEP-1040 )	2	0
1 1 1.2 1.0 1.3 1.0 1.3 1.0 1.0 1.0 1.0789473684210527 76 1.0 1 3 6 29	CONFIG_PINMUX = y takes no effect in ' . config ' at every connected to host . Reported by changru fan : Configuration x86 arduino_101 micro Bug detailed description The uart1_txd(IO1)/uart1_rxd(IO0 ) is mapped by pinmux . If not set CONFIG_PINMUX = y , the uart1 is disabled . Steps to Reproduce Shutdown the arduino_101 board and pull out all USB port from host , then enable it again . setup zephyr environment $ cd zephyr $ source zephyr-env.sh compile and flash the test image $ cd samples/hello_world/microkernel $ make pristine ; make BOARD = arduino_101 flash 4 . Verify the UART output Expected result = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = Hello World ! Actual result ( Nothing ) 5 . Verify CONFIG_PINMUX = y in config $ grep CONFIG_PINMUX = y outdir/ . config Expected result = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = CONFIG_PINMUX = y Actual result ( Nothing ) User Impact UART can't print anything . ( Imported from Jira ZEP-109 )	1	0
2 2 1.8 2.0 1.6 2.0 1.3 2.0 2.0 2.0 1.1153846153846154 52 1.0 9 15 26 98	Do we need to update fatfs . We seem to be using version 0.12 b , there is now version 0.13 c + patches at : < URL > Does this need to be updated for 1.14 / LTS release ?	2	1
1 1 0.8 1.0 1.2 1.0 1.05 1.0 0.6666666666666666 1.0 1.6666666666666667 3 2.0 1 6 12 86	tests/kernel/smp : Test fails , scheduler schedules the threads on only one core . The test at tests/kernel/smp is failed as it is scheduling the threads on only one core . Please refer the sample log : Board used : ESP32 build/zephyr/ . config : CONFIG_SMP = y CONFIG_MP_NUM_CPUS = 2 I just added few prints in the code , to recheck that , : @@ -21 , 11 +21 , 14 @@ K_THREAD_STACK_DEFINE(t2_stack , T2_STACK_SIZE ); struct k_thread t2 ; volatile int t2_count ; +int main_core , t2_core ; #define DELAY_US 50000 void t2_fn(void * a , void * b , void * c ) { + t2_core = _arch_curr_cpu () -> id ; + ARG_UNUSED(a ); ARG_UNUSED(b ); ARG_UNUSED(c ); @@ -46 , 7 +49 , 8 @@ void t2_fn(void * a , void * b , void * c ) void test_main(void ) { int i , ok = 1 ; + main_core = _arch_curr_cpu () -> id ; /* Sleep a bit to guarantee that both CPUs enter an idle * thread from which they can exit correctly to run the main * test . @@ -67 , 7 +71 , 7 @@ void test_main(void ) */ k_busy_wait(DELAY_US + ( DELAY_US / 8 )); - if ( t2_count <= i ) { + if ( t2_count <= i && main_core = = t2_core ) { ok = 0 ; break ; } @@ -76 , 6 +80 , 7 @@ void test_main(void ) if ( ok ) { TC_END_REPORT(TC_PASS ); } else { + printk('t2_core = %d , main_core = %d/n ' , t2_core , main_core ); TC_END_REPORT(TC_FAIL ); } } . Sample log : : ***** Booting Zephyr OS v 1.11.0 -613-g85e8eaa ***** t2_core = 0 , main_core = 0 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = PROJECT EXECUTION FAILED .	1	0
1 1 1.0 1.0 1.0 1.0 1.45 1.0 1.0 1.0 1.7391304347826086 23 2.0 13 13 25 79	[ Coverity CID : 186842 ] Memory - illegal accesses in /drivers/interrupt_controller/plic . c . Static code scan issues seen in File : /drivers/interrupt_controller/plic . c Category : Memory - illegal accesses Function : plic_irq_handler Component : Drivers CID : 186842 Please fix or provide comments to square it off in coverity in the link : < URL >	1	0
2 2 1.2 1.0 1.4 1.5 1.5 2.0 1.6666666666666667 2.0 1.5 20 1.5 1 4 5 46	samples : audio : sof : compilation issue , include file not found . . Describe the bug While running automatic tests on STM32 test bench , samples/audio/sof build fails to build . This appends on all STM32 boards but could also be seen on NON STM32 ( frdm_k64f ) This is a new sample introduced by #30336 To Reproduce Steps to reproduce the behavior : 1 . scripts/twister -- ninja -- runtime-artifact-cleanup -b -p nucleo_f429zi -T samples/audio/sof/ -- outdir . /log_db_audio 2 . See error Expected behavior Build successful or sample not build for those boards Logs and console output : In file included from /home/osboxes/zephyr/zephyr_project/modules/audio/sof/zephyr/ .. /src/arch/xtensa/include/arch/drivers/timer . h : 13 , from /home/osboxes/zephyr/zephyr_project/modules/audio/sof/zephyr/ .. /src/include/sof/drivers/timer . h : 11 , from /home/osboxes/zephyr/zephyr_project/modules/audio/sof/src/lib/clk . c : 10 : /home/osboxes/zephyr/zephyr_project/modules/audio/sof/zephyr/ .. /src/include/sof/drivers/interrupt . h : 11:10 : fatal error : platform/drivers/interrupt . h : No such file or directory 11 | #include < platform/drivers/interrupt . h > . Environment ( please complete the following information ): - OS : Linux - Toolchain Zephyr SDK - Commit SHA : 536f0f5acbce4c974709d5c5ce224eaac6b08022 Additional context In : sample . yaml . there is : : integration_platforms : - intel_adsp_cavs15 . So is it normal that twister try to build for other platforms ? ( I don't catch exactly the difference between : integration_platforms . and : platform_allow . )  	0	0
1 1 1.6 2.0 1.7 2.0 1.6 2.0 1.6666666666666667 2.0 1.0 2 1.0 2 6 16 89	Bluetooth : GATT : fix registering services before stack is initialized . When registering and unregistering a BLE GATT service , a work item related to service changed indication is submitted to a potentially uninitialized work queue ( #9785 ) . This patch adds a check for stack initialization before attempting to submit any item to the work queue . @Vudentz could you please review my changes ? CC : @carlescufi @cvinayak	1	0
2 2 1.0 1.0 1.1 1.0 1.45 2.0 0.6666666666666666 0.0 1.0724421209858104 1339 1.0 14 20 26 88	BLE central error ' ATT Timeout ' when subscribing to NOTIFY attr . Reported by Neha Purushothaman : I am using BOARD quark_se_c1000_devboard with nrf51 Raytac module running hci_uart as controller . I have the sample projects : central_hr and peripheral_hr on 2 boards , without any modifications . I always get an error message : ' at t_t imeout : ATT Timeout ' after every 30th notify-data in the central serial-output . And then it unsubscribes . Please let me know if any additional information is required . ( Imported from Jira ZEP-2200 )  	0	0
2 2 1.8 2.0 1.4 2.0 1.45 2.0 2.0 2.0 1.3636363636363635 22 1.5 0 0 4 104	Improve build times with userspace . Enabling user mode causes the build to run significantly slower . With warm caches ninja increases it's build time from 1 to 6 seconds . The script with this performance bug is sebo @mach : ~ /zephyr/tests/shell/b$ time /usr/bin/python3 /home/sebo/zephyr/scripts/gen_priv_stacks . py -- kernel /home/sebo/zephyr/tests/shell/b/zephyr/priv_stacks_prebuilt . elf -- output priv_stacks_hash . gperf real 0m 2.493 s This should be optimized such that incremental builds , which are a part of a developers workflow and therefore user experience , is not harmed .	2	1
0 0 0.8 1.0 0.9 1.0 0.85 1.0 0.6666666666666666 1.0 0.9579439252336449 214 1.0 6 7 34 98	Offload LE SC ECC calculations to task . Reported by Szymon Janc : On microkernel we could offload ECC calculations to a task to not block rx fiber . ( Imported from Jira ZEP-371 )  	0	1
2 2 1.0 1.0 1.0 1.0 1.05 1.0 1.3333333333333333 1.0 0.9663551401869159 535 1.0 21 43 53 134	API changes to memory pools . Reported by Benjamin Walsh : A potpurri of memory pool-related enhancements : Allow users to specify alignment of memory pool blocks . ( Requires an extra argument during initialization . ) Alignment would apply to the minimum block size . All larger block sizes would automatically have this alignment . Probably need to insist that minimum block size be a multiple of specified alignment to eliminate the need for padding bytes . ( Imported from Jira ZEP-926 )  	0	1
2 2 1.6 2.0 1.8 2.0 1.55 2.0 1.3333333333333333 2.0 1.0736342042755345 842 1.0 4 4 13 116	AIO : AIO Comparator is not stable on D2000 and Arduino101 . Reported by Qiu Peiyang : AIO comparator is not stable on Quark D2000 CRB and Arduino_101 and sometimes cannot generate an interrupt when pin voltage changes . = = = = = = = = = = x86 ARC Quark D2000 CRB Arduino_101 Bug detailed description AIO comparator ISR fails to be invoked when the voltage changes on AIO pin . Test Steps : Apply < URL > Adapt aio_basic_api/src/main . c , delete the comments . Connect PIN_OUT and PIN_IN following aio_basic_api/src/test_callback . c Flash the app to target board . You can see the console output from uart console . Expected Result : Callback should be trigger when polarity is RISE or FALL . Actual Result : Mostly , callback won't be invoked . ( Imported from Jira ZEP-1438 )	1	0
2 2 1.8 2.0 1.4 2.0 1.5 2.0 2.0 2.0 1.3076923076923077 13 1.0 1 1 5 115	gen_app_partitions scans object files unrelated to current image . Describe the bug The : gen_app_partitions . py . does a directory walk here : < URL > This is wrong for two reasons : - It will include left-over objects that is no longer part of the build , if sample has been reconfigured ( incremental builds will not clean up ) - When external project is used , and the binary dir of that project is a sub-folder of the current sample , then the object files of the external image will also be processed , although they are completely unrelated to current image build . To Reproduce tricky , needs special skills . Ask @tejlmand . Expected behavior Only object files for current image should be considered . Impact What impact does this issue have on your progress ( e.g. , annoyance , showstopper ) Logs and console output If applicable , add console logs or other types of debug information e . g Wireshark capture or Logic analyzer capture ( upload in zip archive ) . copy-and-paste text and put a code fence (```) before and after , to help explain the issue . ( if unable to obtain text log , add a screenshot ) Environment ( please complete the following information ): - OS : Linux , but same is expected on other OS'es - Toolchain Zephyr SDK - f2d2a48b96172c768ec81ed1f1962ece6eef6b87 Additional context N/A	1	0
0 0 0.8 1.0 0.7 1.0 1.3 1.0 0.6666666666666666 1.0 1.0698812019566737 1431 1.0 11 14 18 84	Create Release Notes for 1.9 . Reported by Mark Linkmeyer : Create the release notes in time for the release . - Have the initial draft of the release notes ready for review by M4 - Have the final release notes ready by M5 ( Imported from Jira ZEP-2339 )  	0	1
0 0 1.2 1.0 1.0 1.0 0.95 1.0 1.0 1.0 1.0787037037037037 864 1.0 4 8 25 118	BLE Connection Parameter Request/Response Processing . Reported by Gajinder Vij : As a Zephyr developer , I would like a way for my application to determine whether an incoming connection parameter update request gets accepted or rejected , and if it gets accepted , to provide a way to specify which parameters it gets accepted with . ( Imported from Jira ZEP-1474 )  	0	1
2 2 2.0 2.0 1.7 2.0 1.55 2.0 2.0 2.0 1.303030303030303 99 1.0 2 6 8 55	nordic : west flash no longer supports changing `CONFIG_GPIO_PINRESET` when flashing . 6628a16e4d7aa46e57fd2cc8796592983bcc6516 changed the behavior of west flash , which formerly used : -- eraseall . which clears both flash and UICR . : CONFIG_GPIO_PINRESET = n . is intended to support not programming : NRF_UICR -> PSELRESET . to c o-o pt the reset pin for the reset function , instead leaving it available for the application to use as a button . It appears that the west change prevents these registers in UICR from being cleared , so that flashing a new image that changes the intended PSELRESET value has no effect . The workaround is bypass west and use : nrfjprog -- eraseall . , but there probably should be some way to do it in west .	2	0
2 2 1.0 1.0 0.9 1.0 0.9 1.0 1.0 1.0 1.084729981378026 1074 1.0 13 14 37 109	sending LE COC data from RX thread can lead to deadlock . Reported by Szymon Janc : Sending L2CAP data from RX thread can lead to a deadlock if no credits are available . Deadlock occurs due to RX thread waiting on credits semaphore is not able to process incoming credits that would unblock this semaphore . As discussed offline , correct solution for that would be to use TX thread ( or dedicated thread ) for sending data while l2cap send would only queue data . ( Imported from Jira ZEP-1776 )	1	0
0 0 1.2 1.0 1.3 1.5 1.2 1.0 1.3333333333333333 2.0 1.2444444444444445 45 1.0 1 58 73 111	undefined reference when enabling CONFIG_STACK_CANARIES . Add : : CONFIG_STACK_CANARIES = y . to your choice of application ( e.g. : hello_world . ) and platform ( e.g. : nrf52840_pca10056 . , : mimxrt1060_evk . , : hifive1_revb . ) and builds will fail : : Memory region Used Size Region Size %age Used FLASH : 14736 B 1 MB 1.41% SRAM : 3956 B 256 KB 1.51% IDT_LIST : 56 B 2 KB 2.73 /usr/local/zephyr-sdk- 0.10.3 /arm-zephyr-eabi/bin/ .. /lib/gcc/arm-zephyr-eabi/ 8.3.0 / .. / .. / .. / .. /arm-zephyr-eabi/bin/ld : zephyr/kernel/libkernel . a(init . c . obj ): in function `z_early_boot_rand_get ' : /mnt/nordic/zp/zephyr/kernel/init . c : 469 : undefined reference to `sys_rand32_get ' collect2 : error : ld returned 1 exit status .	1	0
2 2 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 1.3048885077186965 2332 1.0 31 34 40 92	[ Coverity CID : 238355 ] Logically dead code in tests/bluetooth/tester/src/mesh . c . Static code scan issues found in file : < URL > Category : Control flow issues Function : : config_mod_pub_set . Component : Tests CID : < URL > Details : < URL > Please fix or provide comments in coverity using the link : < URL > For more information about the violation , check the < URL > . ( < URL > ) Note : This issue was created automatically . Priority was set based on classification of the file affected and the impact field in coverity . Assignees were set using the CODEOWNERS file .	2	0
1 1 1.6 2.0 1.4 1.5 1.3 1.0 1.6666666666666667 2.0 1.1904761904761905 21 1.0 13 35 44 155	tests/kernel/xip crasshes on minnowboard . Toolchain : ZEPHYR_GCC_VARIANT = zephyr Commit ec7d483b5bedc833b6401d9bed31dfd291ae0b64 Which most likely is because minnowboard boots off a bootloader and this testcase should just be excluded . Anyhow , this is what happens ( line numbers added to comment later ) : 1 >>>> SecStartup 2 >>>> MemoryInit Done 3 >>>> BdsEntry 4 [= 3h [ = 3h [ = 3h [ = 3h [ = 3h [ = 3h 5 >>>> Start boot option , Press < F2 > or < DEL > to enter setup page(5 Sec ) ..... 6 UEFI Interactive Shell v 2.2 7 EDK II 8 UEFI v 2.60 ( EDK II , 0x00010000 ) 9 Mapping table 10 FS0 : Alias(s ): HD0b0b :; BLK1 : 11 PciRoot(0x0)/Pci(0x14 , 0x0)/USB(0x1 , 0x0)/HD(1 , GPT , 19BF1E70-3CB6-4304-9893-EEF1E04456AC , 0x800 , 0x2CCCB ) 12 BLK0 : Alias(s ): 13 PciRoot(0x0)/Pci(0x14 , 0x0)/USB(0x1 , 0x0 ) 14 Press ESC in 5 seconds to skip startup . nsh or any other key to continue . Press ESC in 4 seconds to skip startup . nsh or any other key to continue . Press ESC in 3 seconds to skip startup . nsh or any other key to continue . Press ESC in 2 seconds to skip startup . nsh or any other key to continue . Press ESC in 1 seconds to skip startup . nsh or any other key to continue . 15 Shell > fs0 : /EFI/BOOT/bootx64 16 TCF Booting kernel-623acb9223 . elf from root device hd0 , gpt1 17 WARNING : no console will be available to OS 18 error : no suitable video mode found . 19 >>>> SecStartup 20 >>>> MemoryInit Done . 1 boot sequence starts from BIOS , goes to EFI ( 6 ) , grub2 ( 15 ) . On 18 , control is transferred to Zephyr . Nothing happens and the system resets ( 19 ) and BIOS starts again .	2	0
0 0 1.0 1.0 1.4 2.0 1.25 1.0 1.0 1.0 1.0224215246636772 669 1.0 6 14 18 78	thread options : ' kernel . h ' and ' Kernel Primer v2 ' inconsistent . Reported by Sharron LIU : ' kernel . h ' mentioned in the doxygen comments of k_thread_spawn () that parameter ' options ' is not used . While the ' Kernel Primer V2 ' mentioned three options can be passed . the header file : : * @param options Not used currently . * @param delay Duration of execution delay in milliseconds * * @return Kernel thread identifier */ extern k_tid_t k_thread_spawn(char * stack , unsigned stack_size , . the document : < URL > ( Imported from Jira ZEP-1193 )	2	2
1 1 1.2 1.0 1.3 1.0 1.2 1.0 1.0 1.0 1.4791666666666667 48 2.0 19 25 48 277	[ Coverity CID : 197458]Insecure data handling in /subsys/usb/usb_device . c . Static code scan issues seen in File : /subsys/usb/usb_device . c Category : Insecure data handling Function : usb_set_interface Component : Other CID : 197458 Please fix or provide comments to square it off in coverity in the link : < URL >	1	0
2 2 1.6 2.0 1.4 1.0 1.5 1.5 1.3333333333333333 1.0 0.6666666666666666 12 0.5 0 4 16 53	tests/kernel/mem_protect/stackprot hangs without any console output on nrf51/52 . The test tests/kernel/mem_protect/stackprot and tests/kernel/mem_protect/stack_random hangs without any console log or error message . Arch : arm Board : nrf51/52 - nrf51_pca10028 : arm , nrf52_pca10040 : arm , nrf52840_pca10056 : arm Zephyr commit : f3bc967e499b6dd252c7b407c7019460a66a1174 Toolchain : ZEPHYR_TOOLCHAIN_VARIANT = zephyr Error : No console log available at all . Steps to reproduce : : cd zephyr/tests/kernel/mem_protect/stackprot rm -rf build && mkdir build && cd build cmake -D BOARD = nrf52_pca10040 .. / make BOARD = nrf52_pca10040 flash Check the console log . . Sample Expected output : : ***** delaying boot 1000ms ( per build configuration ) ***** ***** Booting Zephyr OS v 1.12.0 -1543-gf3bc967 ( delayed boot 1000ms ) ***** Starts alternate_thread alternate_thread : Input string is too long and stack overflowed ! ***** Stack Check Fail ! ***** Current thread ID = 0x20000030 Faulting instruction address = 0x78ec Fatal fault in thread 0x20000030 ! Aborting . Running test suite stackprot = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = starting test - test_stackprot test_stackprot : Stack ok test_stackprot : Stack ok test_stackprot : Stack ok test_stackprot : Stack ok test_stackprot : Stack ok test_stackprot : Stack ok PASS - test_stackprot = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = RunID : : pa7o PROJECT EXECUTION SUCCESSFUL .  	0	0
2 2 1.6 2.0 1.3 1.5 1.45 2.0 2.0 2.0 1.290909090909091 55 1.0 2 4 17 111	Move tests/subsys/fs/multi-fs/src/test_fs_shell to new shell . tests/subsys/fs/multi-fs/src/test_fs_shell still using old shell .	2	1
1 1 0.8 1.0 0.9 1.0 1.05 1.0 1.0 1.0 1.4421768707482994 147 1.0 30 38 50 105	[ Coverity CID : 203393]Control flow issues in /subsys/bluetooth/controller/ll_sw/ull_conn . c . Static code scan issues seen in File : /subsys/bluetooth/controller/ll_sw/ull_conn . c Category : Control flow issues Function : length_req_rsp_recv Component : Bluetooth CID : 203393 Please fix or provide comments to square it off in coverity in the link : < URL >	1	0
2 2 1.6 2.0 1.5 2.0 1.05 1.0 1.3333333333333333 2.0 1.5714285714285714 7 2.0 1 9 22 67	sanitycheck : replace cmake -H ' not meant for public use ' with -S . < URL > Signed-off-by : Marc Herbert < URL >	2	1
1 1 1.4 2.0 1.3 1.5 1.3 1.5 1.0 1.0 0.0 0 0.0 4 12 23 141	FCB support for non-0xFF flash erase values . Is your enhancement proposal related to a problem ? Please describe . Currently FCB is able to work with flash devices that erase to 0xFF values . Since it's implementation new devices have appeared that use non-0xFF erase values ( 0x00 ) , which is not supported by the FCB as it relies on 0xFF as an erased/empty value in some cases . Describe the solution you'd like Make FCB flash erase value independent . Describe alternatives you've considered There is none as long as FCB is to be used . Additional context The flash API now supports : flash_get_parameters . that returns : flash_parameters . structure that has : erase_value . member , which is initialized by driver with the erase value .	2	1
1 1 1.6 2.0 1.5 2.0 1.35 1.5 1.6666666666666667 2.0 1.0 3 1.0 3 3 12 64	SimpleLink WiFi host driver should revert back to using static memory model . Describe the bug During the upgrade to TI SDK 2.40 , the SimpleLink WiFi host driver code has moved to using the dynamic memory model . This only works well if malloc () is thread-safe , but the implementation in newlib does not appear to be . So it is best to revert back to using static memory allocation in the driver , the way it used to be before the upgrade . Impact Memory corruption issues might occur if SimpleLink host driver is used concurrently with other threads calling malloc () . Environment ( please complete the following information ): - OS : Linux - Zephyr SDK 0.10.1 - Commit SHA : 92ddf63cb80141bc6a032f2c96801556b2f755bd	1	0
1 1 1.2 1.0 1.2 1.0 1.35 1.0 1.0 1.0 1.5757575757575757 33 2.0 12 15 30 75	[ Coverity CID : 187070 ] Control flow issues in /drivers/bluetooth/hci/spi . c . Static code scan issues seen in File : /drivers/bluetooth/hci/spi . c Category : Control flow issues Function : bt_spi_rx_thread Component : Bluetooth CID : 187070 Please fix or provide comments to square it off in coverity in the link : < URL >	1	0
2 2 1.6 2.0 1.6 2.0 1.35 1.5 1.3333333333333333 2.0 0.0 0 0.0 2 2 13 56	samples/drivers/spi_fujitsu_fram crashs due to uninitialized variables . Describe the bug A clear and concise description of what the bug is . In < URL > the spi_cfg struct has not been properly initialized , and has whatever was on the stack for the struct . particularly this means taht the . cs property may contain garbage . The following code in the driver gets triggered : : data -> ctx . config = config ; 8005a90 : 9b0a ldr r3 , [ sp , #40 ] ; 0x28 8005a92 : 601f str r7 , [ r3 , #0 ] if ( ctx -> config -> cs && ctx -> config -> cs -> gpio_dev ) { 8005a94 : 2900 cmp r1 , #0 8005a96 : f000 8162 beq . w 8005d5e < spi_stm32_transceive+0x49a > . I get a bus fault on the attempt to deref ctx -> config -> cs -> gpio_dev , as cs is garbage . either explicitly setting . cs = 0 , or intializing the struct with = { 0 } works to avoid the bus fault . Expected behavior working code on all platforms with spi . Presumably will work on platforms or not , depending on how cs is being handled out of the box for each board . Impact What impact does this issue have on your progress ( e.g. , annoyance , showstopper ) tedious inability to get viable spi demostrations , so ... shrugs big for me . Screenshots or console output If applicable , add a screenshot ( drag-and-drop an image ) , or console logs ( cut-and-paste text and put a code fence (```) before and after , to help explain the issue . Environment ( please complete the following information ): - OS : linux - Toolchain gcc-arm-embedded - Commit SHA 178f16f9e9 ( 2.0 master )	2	0
2 2 1.8 2.0 1.5 1.5 1.7 2.0 1.6666666666666667 2.0 0.0 0 0.0 0 4 23 198	native_posix doesn't call main function that's defined in C++ . native_posix uses < URL > : #define main (...) zephyr_app_main(__VA_ARGS__) . to rename the app's main to something else ( which is presumably linked with a n o-o p weak symbol that gets overridden by the app's main if it exists ) . This works fine in C , but if you define your main function in a C++ file , because the function name isn't the magically special-cased ' main ' anymore , the function name gets mangled into something along the lines of : _Z15zephyr_app_mainv . ( for : void main(void ) . ) , which results in the main function getting silently ignored . I'm not sure there's actually any way to make the macro work : you can't use : asm . to specify the name of the symbol in the definition of a function , only the declaration . If it's possible to require main to be : void(void ) . , ~ the macro could be replaced by a forward declaration of : void main(void ) asm('zephyr_app_main ' ) . ~ an : extern ' C ' . forward declaration of zephyr_app_main could be added : #if defined(__cplusplus ) . , but this might break existing code . Grepping around , it looks like there's one sample that might be broken by this : < URL >	2	0
0 0 0.0 0.0 0.0 0.0 0.35 0.0 0.0 0.0 1.0145985401459854 685 1.0 13 24 32 91	Create test for stack kernel object using native unified kernel API . Reported by Anas Nashif : Verify stack object , its APIs and features as documented in the kernel primer and he API documentation . Please refer to the existing tests for the nano/micro kernels . The new test should utilise the ztest framework . ( Imported from Jira ZEP-1213 )  	0	1
2 2 1.4 2.0 1.3 1.5 1.35 1.5 1.3333333333333333 2.0 1.0 9 1.0 10 36 55 270	 flash_map and flash_area . Doc of flash_map and flash_area are missing Provide a documentation .	2	2
2 2 1.4 2.0 1.2 1.0 1.3 1.0 1.6666666666666667 2.0 1.1515151515151516 33 1.0 9 9 21 86	gpio_mcux driver needs to validate pin parameters . In gpio_mcux driver the GPIO pin number is not checked for valid range and used as an index into the GPIO PCR register array , this can be accessed out of bounds by sending high pin numbers . Pin input is 32-bit value and access_op is also an input controllable by a user thread . Value written is the pin mask operation and not user input , priority is lower because of this .	2	0
0 0 0.6 1.0 1.3 1.5 1.3 1.5 0.3333333333333333 0.0 0.9894736842105263 475 1.0 49 53 56 99	Thread requirements in RFC4291 . Reported by Gajinder Vij : The Thread Protocol imposes the following requirements on RFC4291 : RFC 4291.2 : IPv6 Addressing RFC 4291.2.1 : Addressing Model RFC 4291.2.2 : Text Representation of Addresses RFC 4291.2.3 : Text Representation of Address Prefixes RFC 4291.2.4 : Address Type Identification RFC 4291.2.5 : Unicast Addresses RFC 4291.2.5.1 : Interface Identifiers RFC 4291.2.5.2 : The Unspecified Address RFC 4291.2.5.3 : The Loopback Address RFC 4291.2.5.4 : Global Unicast Addresses RFC 4291.2.5.6 : Link-Local IPv6 Unicast Addresses RFC 4291.2.6 : Anycast Addresses RFC 4291.2.8 : A Node锟絪 Required Addresses 锟?Note : A Node MAY recognize the loopback address RFC 4291.2.6.1 : Required Anycast Address RFC 4291.2.7 : Multicast Addresses RFC 4291.2.7.1 : Pre-Defined Multicast Addresses ( Imported from Jira ZEP-836 )  	0	1
1 1 0.8 1.0 1.1 1.0 1.25 1.0 0.6666666666666666 1.0 2.0 1 2.0 11 40 55 269	sanitycheck : document that -- save-tests appends to existing file . Fix -- help message . Also rename run_report () to save_tests () as it's used only once by -- save-tests and nowhere else . Maybe the code was shared with some -- other-report feature in the past but not any more . Signed-off-by : Marc Herbert < URL >	2	2
2 2 2.0 2.0 1.7 2.0 1.85 2.0 2.0 2.0 1.2566539923954372 2104 1.0 53 119 127 191	[ Coverity CID : 219591 ] Untrusted divisor in drivers/sensor/bme680/bme680 . c . Static code scan issues found in file : < URL > Category : Insecure data handling Function : : bme680_sample_fetch . Component : Drivers CID : < URL > Details : < URL > Please fix or provide comments in coverity using the link : < URL > Note : This issue was created automatically . Priority was set based on classification of the file affected and the impact field in coverity . Assignees were set using the CODEOWNERS file .	2	0
1 1 1.0 1.0 1.3 1.5 1.1 1.0 1.3333333333333333 1.0 1.1102941176470589 136 1.0 11 14 14 34	Define I2S driver APIs . Reported by Kuo-Lang Tseng : Define I2S API to allow implementation of drivers supporting the I2S protocol . ( Imported from Jira ZEP-230 )	1	1
1 1 1.2 1.0 1.4 1.0 1.7 2.0 1.0 1.0 1.0 1 1.0 1 1 5 81	Bluetooth : settings : No space to store CCC config after successful pairing . When subsequent peer connects , enabling CCC fails even though pairing was successful . Steps to reproduce : - clear flash memory - pair BLE host A -> it connects , pairing successful , after reading GATT services host writes CCC and it is possible to send notifications . Disconnect host A . - pair BLE host B -> it connects , pairing successful , after reading GATT services there is warning : : [ bt ] [ WRN ] bt_gatt_attr_write_ccc : No space to store CCC cfg . CCC is not enabled and it is not possible to send notifications . Reproduced on BLE peripheral , nRF52840 , BT_MAX_PAIRED = 2 . @Vudentz please let me know if you need additional information .	1	0
1 1 1.0 1.0 1.2 1.0 1.25 1.0 1.0 1.0 1.457142857142857 70 1.0 3 3 13 67	[ Coverity CID : 188757]Memory - illegal accesses in /subsys/bluetooth/shell/bt . c . Static code scan issues seen in File : /subsys/bluetooth/shell/bt . c Category : Memory - illegal accesses Function : cmd_directed_adv Component : Bluetooth CID : 188757 Please fix or provide comments to square it off in coverity in the link : < URL >	1	0
0 0 0.6 1.0 0.8 1.0 0.85 1.0 0.3333333333333333 0.0 1.0783078307830782 1111 1.0 8 20 24 128	Implement missing functionality for handling of IPv6 next header ( HBH hop-by-hop-option ) which holds RPL related information . . Reported by Ravi kumar Veeramally : RPL related information is kept in IPv6 next header ( HBH hop-by-bop ) and not handled properly . ( Imported from Jira ZEP-1841 )	1	1
0 0 0.8 1.0 0.7 1.0 0.85 1.0 0.3333333333333333 0.0 1.0016207455429498 617 1.0 4 7 15 69	Consider subdividing applications into different categories . Reported by Carles Cufi : As a Zephyr user I would like to be able to determine which applications are meant for consumption as-is and which others are starting points for me to add the code required to implement a product . Currently all applications are under samples/ . The issue is that a new type of application , the ' firmware ' or ' build ' application has appeared with the introduction of samples/bluetooth/hci-uart . This application actually transforms Zephyr into the firmware build of a Bluetooth Low Energy controller , which will probably undergo qualification at some point . As such , it is not directly intended as a starting point , but rather as a ' product ' in itself . A solution to this confusing state of affairs could be to further subdivide the applications into multiple categories , one per folder : apps products/firmware/builds samples ** refdesigns ( Imported from Jira ZEP-1092 )	1	1
1 1 0.6 0.0 0.7 1.0 0.8 1.0 0.3333333333333333 0.0 1.0777262180974478 862 1.0 2 9 23 116	Support for the KW22D512 Kinetis MCU based USB Dongle . Reported by Johann Fischer : Add support for the KW22D512 Kinetis MCU based USB Dongle for 802.15.4 USB-KW24D512 , ( manufacturer NXP , former Freescale ) phySTICK-KW2x , ( manufacturer Phytec ) ( Imported from Jira ZEP-1472 )	1	1
1 1 0.8 1.0 0.9 1.0 1.2 1.0 0.6666666666666666 1.0 1.0 2 1.0 1 3 18 109	net : arp : Zephyr replies to multicast address cause of malfored ARP request . Zephyr replies to IPv4 packets from multicast address after reception of ARP Request with Hardware and Protocol Sender Address set to multicast . This ARP Request should be dropped instead and translation table should not be updated . Note : Zephyr sets source IP address to 0.0.0.0 in all of the responses ( TCP , UDP , ICMP ) . < URL > < URL > < URL >	1	0
0 0 0.4 0.0 0.4 0.0 0.6 0.0 0.0 0.0 1.076625386996904 1292 1.0 7 9 18 71	Static code scan ( coverity ) issues seen . Reported by Shilpashree L C : As per the Coverity last analyses on April 18 , 2017 , there were potential defects that were found in /samples/drivers/ file has mentioned below . Please fix or provide comments to square it off in coverity : < URL > ||CID|| ||Type|| ||Category|| ||File|| ||Function || |151980| |Dereference after null check| |Null pointer dereferences| |/samples/drivers/lcd_hd44780/src/main . c| |main| |169301| |Dereference before null check| |Null pointer dereferences| |/samples/net/echo_client/src/echo-client . c| |compare_udp_data| ( Imported from Jira ZEP-2137 )  	0	0
1 1 1.2 1.0 1.3 1.0 1.45 2.0 1.0 1.0 1.1428571428571428 7 1.0 9 24 41 83	tests/drivers/gpio/gpio_basic_api : test_gpio_deprecated step fails on STM32 boards . Describe the bug While running tests/drivers/gpio/gpio_basic_api on STM32 boards ( nucleo_f746zg , nucleo_f207zg ... ) , the step ' falling edge ' of test_gpio_deprecated step fails . To Reproduce Steps to reproduce the behavior : 1 . west -v build -p auto -b nucleo_f746zg tests/drivers/gpio/gpio_basic_api/ 2 . See error Expected behavior Test Passed Screenshots or console output starting test - test_gpio_deprecated callback triggered : 1 INT cfg 50000 , cnt 1 FAIL - test_callback @86 . config PIN_IN fail : -16 : Assertion failed at WES T_T OPDIR/zephyr/tests/drivers/gpio/gpio_basic_api/src/test_deprecated . c : 159 : test_gpio_deprecated : ( test_callback(GPIO_INT_EDGE | GPIO_INT_ACTIVE_LOW ) not equal to TC_PASS ) . falling edge failed FAIL - test_gpio_deprecated	2	0
0 0 1.0 1.0 1.1 1.0 1.3 1.0 0.6666666666666666 0.0 1.2533333333333334 75 1.0 6 19 31 73	drivers/spi : stm32 : Fix use of single dma channel . Current dma struture code didn't allowed only rx channel removal , disabling tx channel ( in spi client node ) was leading compilation issue . Fix this by moving conditional code inside SPI_DMA_CHANNEL macro and get the part of code which is present or removed ( SPI_DMA_CHANNEL_INIT ) outside of {} . Fixes #25284 Signed-off-by : Erwan Gouriou < URL >	1	0
2 2 1.4 1.0 1.5 1.5 1.65 2.0 1.3333333333333333 1.0 1.6666666666666667 12 2.0 1 2 24 101	QEMU special key handling is broken on qemu_cortex_a53 . Describe the bug QEMU special key handling ( : CTRL+A , ... . ) is broken on : qemu_cortex_a53 . . For example , when you press the : CTRL+a , a . key sequence , QEMU should exit , but that doesn't work ; same goes for : CTRL+a , c . that is supposed to bring up console . It is necessary to : kill -9 . the QEMU pid in order to exit QEMU . To Reproduce Run any test/sample on : qemu_cortex_a53 . . Expected behavior : CTRL+a , ... . key sequences work . Impact The usability of : qemu_cortex_a53 . , the only emulated AArch64 platform , is limited . Environment ( please complete the following information ): - OS : Ubuntu 18.04 - Toolchain : Zephyr SDK - Commit SHA : 4e4139cf9e2a586ce6b3d5ab6e6b41d59df17b21 Additional context The offending commit is f156057b20e5da97bf7108b9e092e6f943e017f1 ( < URL > Note that the tests and samples are still functional . While it is possible that this is a QEMU bug , it is more likely that we have an incorrect DTS configuration for one of the interrupts ( e.g. specifying edge-triggered interrupts as level-triggered ) .	1	0
0 0 0.0 0.0 0.0 0.0 0.4 0.0 0.0 0.0 1.0106221547799696 659 1.0 3 6 21 73	Event group kernel APIs . Reported by Sakari Poussa : Add new kernel API for event groups . Similar to Windows WaitForMultipleObjects () or Posix Condition variables pthread_cond_timedwait () . Having such API would make it easier to port applications to Zephyr . ( Imported from Jira ZEP-1171 )	1	1
1 1 1.2 1.0 1.3 1.0 1.15 1.0 1.0 1.0 0.0 0 0.0 4 16 24 93	Bluetooth mesh message context API needs to expose DST address of RX messages . bt_mesh_msg_ctx contains a field , addr which is the remote address of the sending device i.e. the SRC field . It does not currently include the destination address ( DST ) set by the sender . The mesh models spec describes various rules for handling identical transactions . For example in 3.3.2.2.2 it says ' ... it shall set the Generic Level state to the Level field of the message , unless the message has the same values for the SRC , DST , and TID fields as the previous message received within the last 6 seconds ' . Note that the condition includes matching on the DST value . It's possible for a device to change the DST address it is using . For example , you can imagine a rotary wall dimmer with a ' zone ' selector . The selector may have two positions : 1 - group A and 2 - group B . The selector affects what DST the dimmer uses when sending Delta Set messages . Summary : please make the DST field from RX messages available in the API , presumably by adding it to bt_mesh_msg_ctx . Thanks	1	1
0 0 0.0 0.0 0.1 0.0 0.2 0.0 0.0 0.0 0.9705882352941176 136 1.0 5 6 22 135	Convert ubsys/ipc/rpmsg_service/rpmsg_backend . c to new kwork API . Convert subsys/ipc/rpmsg_service/rpmsg_backend . c to use new kwork API . See the following issue for details : 33104  	0	0
